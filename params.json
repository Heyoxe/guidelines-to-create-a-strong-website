{
  "name": "How-to-make-a-good-website",
  "tagline": "A list of all things to consider when making a website or webapp of quality.",
  "body": "# How to make a good website\r\n\r\nHere you'll find out all the things I could think of to create a good website.\r\nFrom security, to performance, social sharing, analytics etc. I'm trying to not forget anything.\r\nThis list will grow up over time.\r\n\r\nDon't hesitate to PR and let's try to be concise. Other resources on the web go further in details for each topic, let's keep them one-liner here with a sample code when available.\r\n\r\n- [Care about security ?](#care-about-security-)\r\n- [Care about social ?](#care-about-social-)\r\n- [Care about SEO ?](#care-about-seo-)\r\n- [Care about communication ?](#care-about-communication-)\r\n- [Care about Apple ?](#care-about-apple-)\r\n- [Care about accessibility (a11y) ?](#care-about-accessibility-a11y-)\r\n- [Care about privacy ?](#care-about-privacy-)\r\n- [Care about style ?](#care-about-style-)\r\n- [Care about legacy ?](#care-about-legacy-)\r\n- [Care about performance ?](#care-about-performance-)\r\n- [Care about mobile ?](#care-about-mobile-)\r\n- [Care about offline ?](#care-about-offline-)\r\n- [Care about analytics ?](#care-about-analytics-)\r\n- [Care about bugs ?](#care-about-bugs-)\r\n- [Care about misc ?](#care-about-misc-)\r\n\r\n## Care about security ?\r\n\r\n  - Use HTTPS (add a letsencrypt certificate, renew every 3 months automatically)\r\n    - get A+ on https://www.ssllabs.com/ssltest/index.html\r\n    - check more with https://certlogik.com/ssl-checker/\r\n  - Add all security headers\r\n    - get A+ on https://securityheaders.io/\r\n    - **Content-Security-Policy**: define which hosts are allowed for the browser to download/send from/to (scripts, styles, images, iframes, forms..). `Content-Security-Policy: script-src 'self' https://apis.google.com; img-src 'self'`. All details here https://www.html5rocks.com/en/tutorials/security/content-security-policy/\r\n    - **Content-Security-Policy-Report-Only**: when migrating an existing website to CSP, use this first just to get reports on CSP violations (the browser will still acts normal)\r\n    - (deprecated X-Webkit-CSP: old Chrome)\r\n    - (deprecated X-Content-Security-Policy: IE10, FF<24)\r\n    - **Public-Key-Pins**: ensure the webclient has the right public keys, to avoid MITM attacks `public-key-pins-report-only:max-age=500; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; report-uri=\"http://example.com/hpkp/\"`\r\n    - **Public-Key-Pins-Report-Only**: Same as CSP-RO. At first, add this one to see if you get any error. Facebook is using this one for instance.\r\n    - **Strict-Transport-Security**: specify to the browser to use only HTTPS for a period of time. The browser will automatically use https if it got the header before. `Strict-Transport-Security: max-age=63072000; includeSubDomains; preload` (2 years), and add it to the preload list of Chrome https://hstspreload.appspot.com and figure inside Chromium's source: https://cs.chromium.org/chromium/src/net/http/transport_security_state_static.json\r\n    - X-Content-Type-Options\r\n    - X-Frame-Options\r\n    - X-Xss-Protection\r\n    - (deprecated X-Download-Options: IE8)\r\n    - X-Permitted-Cross-Domain-Policies\r\n    - Access-Control-Allow-Origin\r\n    - Add CRI (Subresource Integrity) to your resources https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\r\n```html\r\n<script src=\"framework.js\"\r\n        integrity=\"sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC\"\r\n        crossorigin=\"anonymous\"></script>\r\n```\r\n  - Protect again exploits\r\n    - CSRF/XSRF https://en.wikipedia.org/wiki/Cross-site_request_forgery\r\n    - XSS https://en.wikipedia.org/wiki/Cross-site_scripting\r\n    - XSSI http://stackoverflow.com/questions/8028511/what-is-cross-site-script-inclusion-xssi\r\n    - Sql Injection https://en.wikipedia.org/wiki/SQL_injection\r\n  - Protect the servers against brutefores attacks (add some kind of ban politics)\r\n  - Use JSON Web Tokens https://jwt.io/ to talk to the server\r\n  - Protect against DDOS if you need to, for instance using [Cloudflare](https://www.cloudflare.com/)\r\n  - Use `rel=\"noopener noreferrer\"` for external links: `<a href=\"http://example.com\" target=\"_blank\" rel=\"noopener noreferrer\">` (`noreferrer` is for firefox) to avoid a vulnerability.\r\n  - Identify frauds before they happen with Smyte (a js tag to add) https://www.smyte.com/\r\n  - For registration pages, put a captcha. https://www.google.com/recaptcha/intro/index.html\r\n\r\n## Care about social ?\r\n\r\n - Facebook https://developers.facebook.com/docs/reference/opengraph/ http://stackoverflow.com/questions/10836135/when-do-i-need-a-fbapp-id-or-fbadmins\r\n```html\r\n<meta property=\"fb:admins\" content=\"USER_ID\" />\r\n<meta property=\"fb:app_id\" content=\"123456789456489\" />\r\n```\r\n  - Twitter Card\r\n```html\r\n<meta name=\"twitter:card\" content=\"summary\"/>\r\n<meta name=\"twitter:title\" content=\"{{ PAGE_NAME }}\"/>\r\n<meta name=\"twitter:description\" content=\"{{ PAGE_DESCRIPTION }}\"/>\r\n<meta name=\"twitter:site\" content=\"{{ TWITTER_WEBSITE_ACCOUNT }}\"/>\r\n<meta name=\"twitter:image\" content=\"{{ PAGE_IMAGE_URL }}\" />\r\n<meta name=\"twitter:creator\" content=\"{{ TWITTER_CREATOR_ACCOUNT }}\"/>\r\n<meta name=\"twitter:domain\" content=\"mon.site.com\"/>\r\n```\r\n  - Google Plus\r\n  - Add the Sharing, Like, +1 buttons\r\n    - Facebook https://developers.facebook.com/docs/plugins\r\n    - Twitter https://dev.twitter.com/web/tweet-button\r\n    - Google Plus https://developers.google.com/+/web/share/\r\n  - If your website uses CSP, don't forget to add rules to allow social buttons' integration\r\n\r\n## Care about SEO ?\r\n\r\n  - Use HTTPS\r\n  - Isomorphic/Universal Javascript (prerendering page)\r\n  - Define the crawlers politic. Define the file `robots.txt`, or you can add a meta:\r\n```html\r\n<meta name=\"robots\" content=\"index,follow\" />\r\n```\r\n  - Create a `humans.txt` because we are humans, not machines http://humanstxt.org/. You can add a meta to refer to it (or not). Try https://www.medium.com/humans.txt or https://www.google.com/humans.txt ;)\r\n```html\r\n<link type=\"text/plain\" rel=\"author\" href=\"humans.txt\" />\r\n```\r\n  - If you have a multilanguage website, use `hreflang` tag to indicate alternative versions. Check https://support.google.com/webmasters/answer/189077\r\n```html\r\n<link rel=\"alternate\" hreflang=\"es\" href=\"http://es.example.com/\" />\r\n```\r\n\r\n## Care about communication ?\r\n\r\n  - OpenGraph http://ogp.me/\r\n```html\r\n<meta property=\"og:locale\" content=\"{{ LOCALE }}\" />\r\n<meta property=\"og:type\" content=\"article\" /> <!-- product... -->\r\n<meta property=\"og:title\" content=\"{{ PAGE_NAME }}\" />\r\n<meta property=\"og:description\" content=\"{{ PAGE_DESCRIPTION }}\" />\r\n<meta property=\"og:image\" content=\"{{ PAGE_IMAGE_URL }}\" />\r\n<meta property=\"og:url\" content=\"{{ PAGE_CANONICAL_URL }}\" />\r\n<meta property=\"og:site_name\" content=\"{{ APPLICATION_NAME }}\" />\t\r\n<meta property=\"og:updated_time\" content=\"2015-05-12T22:24:50+00:00\" />\r\n<meta property=\"article:publisher\" content=\"{{ PUBLISHER }}\" />\r\n<meta property=\"article:author\" content=\"{{ AUTHOR }}\" />\r\n<meta property=\"article:section\" content=\"Technology\" />\r\n<meta property=\"article:published_time\" content=\"2015-01-06T23:07:41+00:00\" />\r\n<meta property=\"article:modified_time\" content=\"2015-05-12T22:24:50+00:00\" />\r\n```\r\n  - Bing\r\n```html\r\n<meta name=\"geo.placename\" content=\"United States\" />\r\n<meta name=\"geo.position\" content=\"x;x\" />\r\n<meta name=\"geo.region\" content=\"usa\" />\r\n<meta name=\"ICBM\" content=\"x,x\" />\r\n```\r\n  - Define a canonical URL for every page (to avoid to reference twice the same page, for instance the mobile version and the desktop's)\r\n```html\r\n<link rel=\"canonical\" href=\"article.html\">\r\n```\r\n  - Define it's UTF8\r\n```html\r\n<meta charset=\"utf-8\">\r\n```  \r\n   - Define the content type\r\n```html\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n```\r\n  - Language\r\n```html\r\n<html lang=\"en\">\r\n<meta http-equiv=\"Content-Language\" content=\"en\">\r\n<meta name=\"language\" content=\"{{ LANG }}\" /><!-- Old -->\r\n```\r\n  - Provide some info the browsers/crawlers can use to describe your app (if web app)\r\n```html\r\n<meta name=\"application-name\" content=\"{{ APPLICATION_NAME }}\">\r\n<meta name=\"description\" content=\"{{ PAGE_DESCRIPTION }}\">\r\n<meta name=\"keywords\" content=\"{{ PAGE_KEYWORD }}\" />\r\n```\r\n  - Define a pingback route to know who is linking to you http://wordpress.stackexchange.com/questions/116079/what-is-rel-pingback-and-what-is-the-use-of-this-in-my-website\r\n```html\r\n<link rel=\"pingback\" href=\"http://www.example.com/xmlrpc.php\" />\r\n```\r\n  - You can put some RSS\r\n```html\r\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"http://www.example.com/rss.xml\" />\r\n ```\r\n  - Prev/Next pages if you are in a listing\r\n```html\r\n<link rel=\"prev\" title=\"...\" href=\".../page/1\" />\r\n<link rel=\"next\" title=\"...\" href=\".../page/3\" />\r\n```\r\n  - Define the shortlink of the pages\r\n```html\r\n<link rel=\"shortlink\" type=\"text/html\" href=\"http://example.com/Ad1ca9\">\r\n```\r\n  - Define the sitemap of the website\r\n```html\r\n<link rel=\"sitemap\" type=\"application/xml\" title=\"Sitemap\" href=\"{{ SITEMAP_URL }}\" />\r\n```\r\n  - Favicons/Tiles (+ Apple/Windows variations) \r\n```html\r\n<!-- The classic one -->\r\n<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n\r\n<!-- Used by http://fluidapp.com/ (website to native app on Mac) -->\r\n<link rel=\"fluid-icon\" href=\"fluidicon.png\" title=\"...\">\r\n\r\n<!-- Apple formats https://developer.apple.com/library/content/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html -->\r\n<link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"/apple-icon-57x57.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"/apple-icon-60x60.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"/apple-icon-72x72.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"/apple-icon-76x76.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"/apple-icon-114x114.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"/apple-icon-120x120.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"/apple-icon-144x144.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"/apple-icon-152x152.png\">\r\n<link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-icon-180x180.png\">\r\n\r\n<!-- For Safari pinned tabs -->\r\n<link rel=\"mask-icon\" href=\"logo.svg\" color=\"orange\">\r\n\r\n<!-- Recommanded is 192x192 only -->\r\n<link rel=\"icon\" type=\"image/png\" sizes=\"192x192\"  href=\"/icon-192x192.png\">\r\n<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\">\r\n<link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/favicon-96x96.png\">\r\n<link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">\r\n\r\n<!-- Not sure if still used. App should used it if og:image is unspecified, to display an image when sharing -->\r\n<link rel=\"image_src\" href=\"{{ PAGE_IMAGE_URL }}\">\r\n\r\n<!-- Windows -->\r\n<meta name=\"msapplication-TileColor\" content=\"#ffffff\">\r\n<meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\">\r\n<meta name=\"theme-color\" content=\"#ffffff\">\r\n```\r\n  - Really Simple Discovery  http://en.wikipedia.org/wiki/Really_Simple_Discovery\r\n```html\r\n<link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"RSD\" href=\"http://www.example.com/xmlrpc.php?rsd\" />\r\n```\r\n  - WindowsLiveWriter\r\n```html\r\n<link rel=\"wlwmanifest\" type=\"application/wlwmanifest+xml\" href=\"http://www.example.com/wlwmanifest.xml\" />\r\n```\r\n  - OpenSearch\r\n```html\r\n<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch.xml\" title=\"...\">\r\n```\r\n  - JSON-LD aka Structured Data. It's a mandatory thing to add to your pages. The search engine will format its result according to that. Check https://developers.google.com/search/docs/guides/search-gallery to know what is possible and how to write them. \r\n```html\r\n<script type=\"application/ld+json\">{\"@context\":\"http:\\/\\/schema.org\",\"@type\":\"WebSite\",\"url\":\"https:\\/\\/...\",\"name\":\"...\",\"alternateName\":\"...\"}</script>\r\n```\r\n  - XFN (human relationships) http://microformats.org/wiki/rel-profile\r\n```html\r\n<link rel=\"profile\" href=\"http://gmpg.org/xfn/11\" />\r\n```\r\n  - Dublin Core Metadata (not sure if used?) https://en.wikipedia.org/wiki/Dublin_Core\r\n````html\r\n<meta name=\"DC.Format\" content=\"text/html\">\r\n<meta name=\"DC.Language\" content=\"en\" >\r\n<meta name=\"DC.Type\" content=\"Text\" >\r\n<meta name=\"DC.Title\" content=\"My revolution\" >\r\n```\r\n\r\n## Care about Apple ?\r\n\r\n  - Apple has some options to customize the web app appearance https://developer.apple.com/library/content/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html\r\n```html\r\n<link rel=\"apple-touch-startup-image\" href=\"/startup.png\">\r\n<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n<meta name=\"format-detection\" content=\"telephone=no\">\r\n```\r\n\r\n## Care about accessibility (a11y) ?\r\n\r\n  - Read http://www.bbc.co.uk/gel/guidelines/how-to-design-for-accessibility to get a global why we should care\r\n  - Check the posters in https://github.com/UKHomeOffice/posters/tree/master/accessibility to get more clear headlines\r\n  - Audit your website: https://github.com/addyosmani/a11y [![GitHub stars](https://img.shields.io/github/stars/addyosmani/a11y.svg?style=social&label=Star)](https://github.com/addyosmani/a11y)\r\n  - Be ARIA (Accessible Rich Internet Applications)\r\n    - Check http://a11yproject.com/posts/getting-started-aria/ to understand what it is\r\n    - For more details https://classroom.udacity.com/courses/ud891\r\n    - Use its roles: `role=\"banner\"` `role=\"navigation\"` etc. see http://a11yproject.com/checklist.html for a useful list\r\n    - Use `alt` on images, `label` on forms controls labels    \r\n  - Read the \"Web Content Accessibility Guidelines\" ([WCAG](https://www.w3.org/TR/WCAG/))\r\n  - Ensure the color contrast you are using is fine: http://leaverou.github.io/contrast-ratio/    \r\n  \r\n## Care about privacy ?\r\n\r\n  - Add Do Not Track (DNT) header: opt-out of third-party tracking for purposes including behavioral advertising https://en.wikipedia.org/wiki/Do_Not_Track `DNT: 1`\r\n\r\n## Care about style ?\r\n\r\n  - Consider using a \"reset\" css such as https://necolas.github.io/normalize.css\r\n  - Add viewport meta mobile compliant\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes, minimal-ui\">\r\n```\r\n  - Avoid FOUC (Flash Of Unstyled Content) and FOIC (Flash Of Invisible Content) https://css-tricks.com/fout-foit-foft/\r\n  - Make it responsive using media queries and other css techniques\r\n  - Talk to a UI and UX designer\r\n  - Avoid to use custom scrollbars plugins. People tends to not like them. There are often used to cancel the style of the ugly scrollbars in Windows unfortunately.\r\n  - Fix the size of elements in the page (images, videos..) to avoid shifting layouts\r\n  - Ensure the color contrast you are using is fine: http://leaverou.github.io/contrast-ratio/\r\n\r\n## Care about legacy ?\r\n\r\n  - Add X-UA-Compatible\r\n````html\r\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n```\r\n  - If you uses specific features, you can use `@supports` if css only, or https://modernizr.com/ to detect if a feature is available and can fallback.\r\n  - Add shims\r\n```html\r\n<!--[if lt IE 9]>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js\"></script>\r\n<![endif]-->\r\n```\r\n  - Add polyfills (use cloudflare cdn to grab them)\r\n    - `fetch`: https://github.com/github/fetch [![GitHub stars](https://img.shields.io/github/stars/github/fetch.svg?style=social&label=Star)](https://github.com/github/fetch)\r\n    - `Promise`: https://github.com/stefanpenner/es6-promise [![GitHub stars](https://img.shields.io/github/stars/stefanpenner/es6-promise.svg?style=social&label=Star)](https://github.com/stefanpenner/es6-promise)\r\n    - media queries: https://github.com/scottjehl/Respond [![GitHub stars](https://img.shields.io/github/stars/scottjehl/Respond.svg?style=social&label=Star)](https://github.com/scottjehl/Respond)\r\n    - all es6 and es7 features: https://github.com/zloirock/core-js [![GitHub stars](https://img.shields.io/github/stars/zloirock/core-js.svg?style=social&label=Star)](https://github.com/zloirock/core-js)\r\n    - Web Animations API (`document.querySelector('.pulse').animate({...})`): https://github.com/web-animations/web-animations-js [![GitHub stars](https://img.shields.io/github/stars/web-animations/web-animations-js.svg?style=social&label=Star)](https://github.com/web-animations/web-animations-js)\r\n\r\n## Care about performance ?\r\n\r\n  - Use HTTP/2\r\n  - DNS Prefetch to resolve DNS asap (for future pages)\r\n```html\r\n<link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\">\r\n<link rel=\"dns-prefetch\" href=\"//themes.googleusercontent.com\">\r\n```\r\n  - DNS+Handshake+TLS Preconnect. Better. DNS+TCP handshake + optional TLS negotiation. Use for the current page.\r\n```html\r\n<link rel=\"preconnect\" href=\"//fonts.googleapis.com\">  \r\n```\r\n  - Resource Prefetch (low priority). Download a resource right now (into cache) if we know it's going to be used later.\r\n```html\r\n<link rel=\"prefetch\" href=\"image.png\">\r\n```\r\n  - Subresource: Download directly (high priority, whereas prefetch is low priority) a resource that will be discovered later in the page (such as `<script>` at the end)\r\n```html\r\n<link rel=\"subresource\" href=\"app.js\">\r\n```\r\n  - Prerender. Fetch the whole content of another page (css, process js etc.). Useful when you know that the user will click on it for sure. It will take only a instant (everything will be already loaded!)\r\n```html\r\n<link rel=\"prerender\" href=\"http://example.com/about\">\r\n```\r\n  - `defer` or `async` your `<script>` if possible\r\n  - Think about the critical css path. Inject it in the `<head>` directly\r\n  - Move non critical stylesheets outside of the `<head>` (it blocks the first paint otherwise)\r\n  - Shrink your js/css bundles\r\n    - Split the libs bundle(s) (rarely changed) from the app bundle(s)\r\n  - Batch layout trashing using [fastdom](https://github.com/wilsonpage/fastdom)\r\n  - Load unnecessary modules after the initial rendering\r\n  - Delay if not in the viewport at first sight\r\n    - Load images lazily\r\n  - Use `requestAnimationFrame` to handle any animation if using JS (avoid `setTimeout`/`setInterval`) https://developers.google.com/web/fundamentals/performance/rendering/optimize-javascript-execution\r\n  - Use `requestIdleCallback` when you want to process something not time critical https://developers.google.com/web/updates/2015/08/using-requestidlecallback\r\n  - Avoir layout trashing (write/read DOM continuously). Batch. And simply let the frameworks (if available) update the DOM for you (with the Virtual DOM nowadays)\r\n  - Gzip your resources\r\n  - Optimize your images and your SVGs https://jakearchibald.github.io/svgomg/\r\n  - Use `async` and `defer` on your scripts when it's possible\r\n  - To do something before unloading the page, use the navigator beacon to not block the closing https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon\r\n  - Only import the necessary font families and weights\r\n```html\r\n<link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Open+Sans:300\">\r\n```\r\n  - Better, don't use `<link rel=\"stylesheet\" ..>`, it's a blocking resource download. Try to inline into `<style>`.\r\n  - For classic js third party libraries, use a cdn (unpkg, cdnjs, jsdelivr, maxcdn..)\r\n  - Use a generic CDN for your resources like [Cloudflare](https://www.cloudflare.com/)\r\n  - If you don't want an external CDN, install a \"HTTP Web Accelerator\" like Varnish to cache static resources server side and serve them faster\r\n  - Use `rel=\"noopener\"` for external links: `<a href=\"http://example.com\" target=\"_blank\" rel=\"noopener\">`\r\n  - Check your performances with https://testmysite.io/ \r\n  - Check your performances and best practices with Lighthouse: https://github.com/GoogleChrome/lighthouse [![GitHub stars](https://img.shields.io/github/stars/GoogleChrome/lighthouse.svg?style=social&label=Star)](https://github.com/GoogleChrome/lighthouse) (test if you app can be considered as \"progressive\")\r\n  - Analyze what changes in the DOM with Chrome extensions such as DOMListener and http://google.github.io/tracing-framework/ if you want the best!\r\n  - Evaluate your bloat score http://www.webbloatscore.com/\r\n  \r\n## Care about mobile ?\r\n\r\n  - Add a manifest to know how to display it on the home screen https://developer.mozilla.org/en-US/docs/Web/Manifest\r\n```html\r\n<link rel=\"manifest\" href=\"/manifest.json\">\r\n```\r\n```json\r\n{\r\n\t\"name\": \"example.com\",\r\n\t\"short_name\": \"EXX\",\r\n\t\"start_url\": \"/\",\r\n\t\"display\": \"standalone\",\r\n\t\"background_color\": \"#fff\",\r\n\t\"theme_color\": \"#0379C4\",\r\n\t\"description\": \"The official website and documentation for ...\",\r\n\t\"icons\": [ { } ]\r\n}\r\n```\r\n  - Use AMP https://www.ampproject.org/. It adds constraints and tons of tricks to get über-fast pages.\r\n\r\n## Care about offline ?\r\n\r\n  - Add a service worker and cache resources and responses https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/\r\n    - you can generate automatically some service-worker.js code using https://github.com/GoogleChrome/sw-precache\r\n  - (Add a AppCache manifest. Deprecated)\r\n\r\n## Care about analytics ?\r\n\r\n  - Google Webmaster\r\n```html\r\n<meta name=\"google-site-verification\" content=\"xyz\">\r\n```\r\n  - Google analytics https://developers.google.com/analytics/devguides/collection/analyticsjs/\r\n```html\r\n<script>\r\nwindow.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;\r\nga('create', 'UA-XXXXX-Y', 'auto');\r\nga('send', 'pageview');\r\n</script>\r\n<script async src='https://www.google-analytics.com/analytics.js'></script>  \r\n```\r\n  - You an try Amplitude too https://amplitude.com/`\r\n  - Mixpanel is a good one too https://mixpanel.com/\r\n  - You have a bunch of tags ? Use Google Tag Manager.\r\n \r\n## Care about bugs ?\r\n\r\n  - Monitor browser's JS errors, for instance with https://trackjs.com or https://sentry.io/\r\n  - Check your Google Webmaster for crawl/sitemap/robots errors\r\n\r\n## Care about misc ?\r\n\r\n  - If the website sets cookies to an EU visitor, you must display a notice https://www.cookielaw.org/the-cookie-law/\r\n  - Add a legal mentions page\r\n  - Add Google notranslate to avoid Google to display the translation bar when you know it's not needed\r\n```html\r\n<meta name=\"google\" value=\"notranslate\">  \r\n```\r\n  - Try to make your website working without JS (use server-side rendering)\r\n  - Validate your pages syntax using https://validator.w3.org/nu/?doc=http%3A%2F%2Fwww.twitter.com to quickly grab some bits of warnings and things not properly HTML standard or things you forgot. You probably have errors but it's because it's a bit too old and strict. ;-)\r\n  - Use a clear and proper wording in your website. Check this out: https://uxplanet.org/effective-writing-for-your-ui-things-to-avoid-f6084e94e009  \r\n  \r\n  \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}